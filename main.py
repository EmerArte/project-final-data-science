import streamlit as st
import pandas as pd
import datetime
import plotly.express as px
from streamlit_option_menu import option_menu
import plotly.graph_objects as go
import numpy as np
import requests
import json
import time


def graphy_serie_time(df):
    df_grp = df.groupby(['FECHA HECHO'])['CANTIDAD'].sum().reset_index()
    fig = px.line(df_grp, x='FECHA HECHO', y="CANTIDAD", title='Historial de casos de violencia intrafamiliar',
                  color_discrete_sequence=['#7BE583'])
    fig.update_layout({'plot_bgcolor': 'rgba(0,0,0,0)', 'paper_bgcolor': 'rgba(0,0,0,0)'})
    fig.update_xaxes(rangeslider_visible=True,
                     rangeselector=dict(buttons=list(
                         [
                             dict(step='day', stepmode='backward', label='1 semana', count=7),
                             dict(step='month', stepmode='backward', label='1 mes', count=1),
                             dict(step='month', stepmode='backward', label='3 meses', count=3),
                             dict(step='year', stepmode='backward', label='1 a침o', count=1),
                             dict(label='Mostrar Todo', step='all')
                         ]
                     )))
    return fig
def graphy_serie_time_result(df):
    fig = px.bar(df, x='FECHA', y='PREDICCION', title='PREDICCI칍N DE CASOS DE VIOLENCIA INTRAFAMILIAR',color_discrete_sequence=['#7BE583'])
    return fig
def graphy_porcentual_gender_increment(df):
    df_h_a침o = df[df.GENERO == 'MASCULINO'].groupby(['A침o'])['CANTIDAD'].sum().reset_index()
    df_f_a침o = df[df.GENERO == 'FEMENINO'].groupby(['A침o'])['CANTIDAD'].sum().reset_index()
    df_h_a침o['cambio_porcentual'] = round((df_h_a침o['CANTIDAD'].pct_change()*100),0)
    df_f_a침o['cambio_porcentual'] = round((df_f_a침o['CANTIDAD'].pct_change()*100),0)
    df_h_a침o = df_h_a침o[df_h_a침o.A침o < 2021]
    df_f_a침o = df_f_a침o[df_f_a침o.A침o < 2021]
    df_f_a침o = df_f_a침o.dropna()
    df_h_a침o = df_h_a침o.dropna()

    labels = ['Masculino', 'Femenino']
    colors = ['#90CAF9', '#F48FB1']

    mode_size = [8, 8]
    line_size = [2, 2]

    x_data = np.vstack((np.arange(2011, 2020),)*2)

    y_data = np.array([df_h_a침o['cambio_porcentual'],df_f_a침o['cambio_porcentual']])

    fig = go.Figure()

    for i in range(0, 2):
        fig.add_trace(go.Scatter(x=x_data[i], y=y_data[i], mode='lines',
            name=labels[i],
            line=dict(color=colors[i], width=line_size[i]),
            connectgaps=True,
        ))

        # endpoints
        fig.add_trace(go.Scatter(
            x=[x_data[i][0], x_data[i][-1]],
            y=[y_data[i][0], y_data[i][-1]],
            mode='markers',
            marker=dict(color=colors[i], size=mode_size[i])
        ))

    fig.update_layout(
        xaxis=dict(
            showline=True,
            showgrid=False,
            showticklabels=True,
            linecolor='rgb(204, 204, 204)',
            linewidth=2,
            ticks='outside',
            tickfont=dict(
                family='Arial',
                size=12,
                color='rgb(82, 82, 82)',
            ),
        ),
        yaxis=dict(
            showgrid=False,
            zeroline=False,
            showline=False,
            showticklabels=False,
        ),
        autosize=False,
        margin=dict(
            autoexpand=False,
            l=100,
            r=20,
            t=110,
        ),
        showlegend=False,
        plot_bgcolor='white'
        )
    annotations = []

    for i in range(0, 2):
        fig.add_trace(go.Scatter(x=x_data[i], y=y_data[i], mode='lines',
                name=labels[i],
                line=dict(color=colors[i], width=line_size[i]),
                connectgaps=True,
        ))

            # endpoints
        fig.add_trace(go.Scatter(
                x=[x_data[i][0], x_data[i][-1]],
                y=[y_data[i][0], y_data[i][-1]],
                mode='markers',
                marker=dict(color=colors[i], size=mode_size[i])
        ))

    fig.update_layout(
            xaxis=dict(
                showline=True,
                showgrid=False,
                showticklabels=True,
                linecolor='rgb(204, 204, 204)',
                linewidth=2,
                ticks='outside',
                tickfont=dict(
                    family='Arial',
                    size=12,
                    color='rgb(82, 82, 82)',
                ),
            ),
            yaxis=dict(
                showgrid=False,
                zeroline=False,
                showline=False,
                showticklabels=False,
            ),
            autosize=False,
            margin=dict(
                autoexpand=False,
                l=100,
                r=20,
                t=110,
            ),
            showlegend=False,
            plot_bgcolor='white'
        )

    annotations = []

    # Adding labels
    for y_trace, label, color in zip(y_data, labels, colors):
        # labeling the right_side of the plot
        annotations.append(dict(xref='paper', x=0.95, y=y_trace[9],
                                    xanchor='left', yanchor='middle',
                                    text='{}'.format(label),
                                    font=dict(family='Arial',
                                                size=10),
                                    showarrow=False))
    # Title
        annotations.append(dict(xref='paper', yref='paper', x=0.0, y=1.00,
                                xanchor='left', yanchor='bottom',
                                text='INCREMENTO PORCENTUAL ANUAL EN CASOS REPORTADOS POR G칄NERO',
                                font=dict(family='Arial',
                                            size=12,
                                            color='black'),
                                showarrow=False))
    fig.update_layout(annotations=annotations)
    return fig

def graphy_case_depto(df):
    df_grp1 = df.groupby(['DEPARTAMENTO'])['CANTIDAD'].sum().reset_index()
    fig = px.bar(df_grp1.sort_values(by='CANTIDAD', ascending=False), x='DEPARTAMENTO', y='CANTIDAD', title='CANTIDAD DE CASOS DE VIOLENCIA INTRAFAMILIAR POR DEPARTAMENTO')
    fig.update_xaxes(tickangle=-90)
    return fig
def graphy_grupo_etario(df, df_departament = "C칍RDOBA", df_grupo = "MENORES"):
    df_grp9 = df.groupby(['DEPARTAMENTO', 'ARMAS MEDIOS', 'GRUPO ETARIO'])['CANTIDAD'].sum().reset_index()
    df_grp9 = df_grp9[(df_grp9['DEPARTAMENTO'] == str(df_departament))]
    df_grp9 = df_grp9[(df_grp9['GRUPO ETARIO'] == str(df_grupo))]
    fig = px.bar(df_grp9.sort_values(by='CANTIDAD', ascending=True), x="GRUPO ETARIO", y='CANTIDAD',
                 color="ARMAS MEDIOS", title="CASOS DE VIOLENCIA INTRAFAMILIAR POR GRUPO ETARIO EN {}".format(df_departament),
                  barmode='group',
                  color_discrete_map={"SIN EMPLEO DE ARMAS": "#9EFFCA",
                                     "CONTUNDENTES": "#26A18D",
                                     "ARMA BLANCA / CORTOPUNZANTE": "#004E64",
                                     "ESCOPOLAMINA": "#00A5CF",
                                     "NO REPORTA": "#8ECAE6",
                                     "ARMA DE FUEGO": "#3DECAF"
                                     })
    fig.update_layout({'plot_bgcolor': 'rgba(0,0,0,0)', 'paper_bgcolor': 'rgba(0,0,0,0)'})
    return fig
def graphy_day_of_week_depto(df,df_departament):
    df_grp5 = df.groupby(['DEPARTAMENTO', 'Dia de la semana', 'GENERO'])['CANTIDAD'].sum().reset_index()
    df_grp5 = df_grp5[(df_grp5['DEPARTAMENTO'] == str(df_departament))]
    fig = px.bar(df_grp5.sort_values(by='CANTIDAD', ascending=False), x="Dia de la semana", y='CANTIDAD',
                 color="GENERO",
                 title="N칰mero de casos de violencia intrafamiliar por d칤a de la semana en el departamento '{}'".format(df_departament), barmode='group',
                 color_discrete_map={"MASCULINO": "#90CAF9",
                                     "FEMENINO": "#F48FB1",
                                     "NO REPORTA": "#00A5CF",
                                     })
    fig.update_layout({'plot_bgcolor': 'rgba(0,0,0,0)', 'paper_bgcolor': 'rgba(0,0,0,0)'})
    return fig
@st.cache(allow_output_mutation=True)
def cargar_datos():
    return pd.read_csv("Violencia_Intrafamiliar_Colombia.csv")
def calcular_prediccion(departament, grupo_etario, genero, fecha_inicio, fecha_fin, arma_medio):
    if fecha_inicio > fecha_fin:
        return None
    num_days = fecha_fin  - fecha_inicio
    days = (np.timedelta64(num_days, 'D')).astype(int)
    request_data =[]
    fecha = fecha_inicio
    for _ in range(days+1):
        request_data.append({"departamento": departament,
                      "genero": genero,
                     "grupo_etario": grupo_etario,
                     "armas_medio": arma_medio,
                     "fecha": str(fecha)
                     })
        fecha = fecha + datetime.timedelta(days=1)
    #request_data = [{"departamento": departament,
     #                 "genero": genero,
     #                 "grupo_etario": grupo_etario,
      #                "armas_medio": arma_medio,
       #               "fecha": str(feha),
       # }]
    
    data_cleaned = str(request_data).replace("'", '"')
    url_api = "https://backed-api-data-science.herokuapp.com/predict"
    pred = requests.post(url=url_api, json=json.loads(data_cleaned),headers={"Content-Type": "application/json"}).text
    pred_df = json.loads(pred)
    return pred_df

st.set_page_config(page_title='Violencia intrafamiliar', layout='wide', page_icon='游늵')
df = cargar_datos()
#styles
st.markdown(
    """
    <style type="text/css">
        li.nav-item a.active i.icon {
            color: var(--text-color) !important;
            background-color: #007bff !important;
        }
        i.icon{
            color: var(--text-color);
        }
        div.row-widget button{
            width: 100%;
        }
        .title_personalized{
            font-size: 1rem;
            font-weight: bold;
            text-color: var(--text-color) !important;
            color: var(--text-color) !important;
            text-decoration: none;
            margin: 0 0.4rem;
        }
        
    </style>
    """, unsafe_allow_html=True)

with st.sidebar:
    choose = option_menu("DASHBOARD", ["Home", "Predecir", "Contacto"],
                         icons=['house', 'graph-up', 'person lines fill'],
                         menu_icon="app-indicator", default_index=0,
                         styles={
        "container": {"padding": "5! important", "font-family": "sans-serif", "font-weight": "bold", "background-color": "var(--background-color)"},
        "icon": {"font-size": "25px", "font-family": "sans-serif", "font-weight": "bold"},
        "nav-link": {"font-size": "16px", "text-align": "left", "margin": "0px", "--hover-color": "var(--secondary-background-color)", "font-family": "sans-serif"},
        "nav-link-selected": {"background-color": "var(--primary-color)"},
    })

if choose == "Home":
    with st.container():
        st.title(
                'Saludos, bienvenidos a la plataforma de predicci칩n de violencia intrafamiliar en Colombia')
        st.markdown("""
        <p>
        Este estudio fue realizado con la informaci칩n recolectada durante la 칰ltima d칠cada, y tiene como objetivo predecir la cantidad de casos de violencia intrafamiliar que se presentan en el pa칤s.        Este estudio fue realizado con la informacion recolectada durante la ultima decada, y tiene como objetivo predecir la cantidad de casos de violencia intrafamiliar que se presentan en el pais.
        <br>
        A continuaci칩n encontrar치 informaci칩n general acerca del panorama de casos de violencia intrafamiliar en Colombia, y una breve descripci칩n de cada uno de los datos que se recolectan.        </p>
        """, unsafe_allow_html=True)   
        
        with st.container():
            st.plotly_chart(graphy_serie_time(df),use_container_width=True)
            st.markdown("""
            <p>
            Esta gr치fica muestra la cantidad de casos de violencia intrafamiliar que se presentan en el pa칤s en cada uno de los a침os de la historia.
            Observamos que la cantidad de casos de violencia intrafamiliar que se presentan en el pa칤s aumenta progresivamente a medida que avanza el tiempo. Adem치s, observamos que durante el transcurso de los a침os, com칰nmente se ve un aumento en la cantidad de casos de violencia intrafamiliar en el mes de enero, espec칤ficamente encontramos un mayor n칰mero de casos en a침o nuevo, probablemente esto est칠 relacionado con el alcohol y las fiestas de fin de a침o.
            <br>
            </p>
            <hr>
            """, unsafe_allow_html=True)
            with st.container():
                st.subheader("La violencia intrafamiliar por departamento")
                st.markdown("""
                <p>
                A continuaci칩n encontrar치 una gr치fica con la informaci칩n de detallada de cada uno de los departamentos, utilice los filtros para ver la informaci칩n de cada departamento.
                </p>
                """, unsafe_allow_html=True)
                col1, col2 = st.columns(2)
                with col1:
                    option = st.selectbox(key="a",
                    label ='Departamento', options=tuple(pd.unique(df['DEPARTAMENTO'])))
                    
                with col2:
                    option2 = st.selectbox(
                    'Grupo etario', tuple(pd.unique(df['GRUPO ETARIO'])))
                st.plotly_chart(graphy_grupo_etario(df,option, option2),use_container_width=True)
                st.markdown("""
                <p>
                El com칰n denominador en los casos de violencia intrafamiliar en la mayoria de departamentos es el
                 uso de armas contundentes, adem치s vemos un aumento en el numero de casos de violencia intrafamiliar en los adultos y uno de los departamentos con mayor cantidad de casos de violencia intrafamiliar es Cundinamarca.
                </p>
                """, unsafe_allow_html=True)
            st.subheader("La violencia intrafamiliar por g칠nero")
            with st.container():
                option3 = st.selectbox(key="b",
                label ='Departamento', options=tuple(pd.unique(df['DEPARTAMENTO'])))
                st.plotly_chart(graphy_day_of_week_depto(df, option3), use_container_width=True)
                st.markdown("""
                <p>
                En este gr치fico podemos observar que la violencia intrafamiliar afecta principalmente a las mujeres, y en la mayoria de departamentos existe un mayor n칰mero de casos los el d칤a domingo.
                <br>
                En el siguiente gr치fico nos enfocaremos en el incremento porcentual con respecto al a침o anterior.
                </p>
                """, unsafe_allow_html=True)
                st.plotly_chart(graphy_porcentual_gender_increment(df), use_container_width=True)
                st.markdown("""
                <p>
                Para entender esta gr치fica tenemos que tener en cuenta los resultados globales en cuanto al n칰mero total de casos por a침o, ya que como hemos venido observando la cantidad de casos de violencia intrafamiliar aumenta progresivamente a medida que avanza el tiempo. Sin embargo, en este gr치fico queremos observar cu치l fue el cambio porcentual bas치ndonos en el a침o anterior.
                <br>
                Una vez tenemos claro lo anterior, podemos observar como durante el periodo comprendido desde 2011 hasta 2015 se estaban presentando un incremento porcentual bastante marcado. Sin embargo, los periodos posteriores a este nos demuestran
                que el n칰mero de casos con respecto al anterior no sub칤a con el mismo ritmo que lo hab칤a hecho en los a침os anteriores, hasta el punto que en 2018 para los casos de violencia intrafamiliar en las mujeres el incremento porcentual fue negativo '-11%'.
                <br>
                El n칰mero de casos sigue siendo preocupante, pero a lo largo de los a침os estos han bajado su ritmo de crecimiento, lo cual da esperanza de que este pueda llegar a disminuir en un largo plazo.</p>
                """, unsafe_allow_html=True)


elif choose == "Contacto":
    with st.container():
        st.title('Grupo desarrollador')
        st.write("Somos unos estudiantes de ingenier칤a de sistemas de la Universidad De C칩rdoba, si tienes alguna duda o sugerencia puedes contactarnos en el siguiente correo: fktcg99@gmail.com, tambi칠n puedes aportar a nuestro proyecto en GitHub: https://github.com/Cgalvispadilla/project-final-data-science")
        st.markdown("""
        <a class = "title_personalized" href="https://www.linkedin.com/in/cgalvispadilla/">CARLOS ANDRES GALVIS PADILLA</a>
        <br>
        <a class = "title_personalized" href="https://www.linkedin.com/in/emerarteaga22/">EMER ELIAS ARTEAGA CAMARGO</a>
        <br>
        <a class = "title_personalized" href="https://www.linkedin.com/in/andr%C3%A9s-otero-670a61232/">ANDRES FELIPE OTERO LOBO</a>
        <br>
        <a class = "title_personalized" href="https://www.linkedin.com/in/andres-camilo-ortiz-cogollo-3560b2243/">ANDRES CAMILO ORTIZ COGOLLO</a>
        <br>
        <a class = "title_personalized" href="https://www.linkedin.com/in/cdelcastillomaussa/">CARLOS ALBERTO DEL CASTILLO MAUSSA</a>
        """,unsafe_allow_html=True)
elif choose == "Predecir":
    with st.container():
        st.title(
                'Predicci칩n de violencia intrafamiliar en Colombia')
        st.markdown('''<p>
                        Este modelo fue entrenado con una base de datos de violencia intrafamiliar en Colombia, y se utiliz칩 el algoritmo de regresi칩n llamado KNeighborsRegresor.<br>
                        Rellene el siguiente formulario para realizar una predicci칩n.
                    </p>''', unsafe_allow_html=True)
        col_1, col_2, col_3 = st.columns(3)

        with st.container():
            with col_1:
                departament = st.selectbox(key="departament",
                label ='Seleccione un departamento', options=tuple(pd.unique(df['DEPARTAMENTO'])))
                fecha_inicio = st.date_input('Seleccione el d칤a de inicio de la predicci칩n', value=datetime.date.today())
                
            with col_2:
                grupo_etario = st.selectbox(key="grupo_etario",
                label ='Seleccione un grupo etario', options=tuple(pd.unique(df['GRUPO ETARIO'])))
                fecha_fin = st.date_input('Seleccione el d칤a de fin de la predicci칩n', value=fecha_inicio + datetime.timedelta(days=6), min_value=fecha_inicio+datetime.timedelta(days=2))
            with col_3:
                genero = st.selectbox( key="genero", label ='Seleccione un g칠nero', options=tuple(pd.unique(df['GENERO'])))
                arma_medio = st.selectbox( key="arma_medio", label ='Seleccione el arma medio', options=tuple(pd.unique(df['ARMAS MEDIOS'])))
            
            predecir = st.button(label='Predecir')
            
            if predecir :
                my_bar = st.progress(0)
                res = calcular_prediccion(departament, grupo_etario, genero, fecha_inicio, fecha_fin, arma_medio)
                casos_response = []
                if res:
                    for i in res:
                        casos_response.append(i['cantidad_violentados'])
                    for percent_complete in range(100):
                        time.sleep(0.01)
                    my_bar.progress(percent_complete + 1)
                    sub_df = pd.DataFrame()
                    sub_df['FECHA'] = pd.date_range(str(fecha_inicio), str(fecha_fin))
                    sub_df['PREDICCION'] = casos_response
                    st.plotly_chart(graphy_serie_time_result(sub_df), use_container_width=True)
                else:
                    st.error('La fecha de inicio debe ser menor a la fecha de fin')
                
                
            
